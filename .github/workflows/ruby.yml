name: Ruby

on: push

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  scan_js:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Scan for security vulnerabilities in JavaScript dependencies
        run: bin/importmap audit

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/rubocop -f github

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: mi_carrera
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true

    - name: Run tests
      env:
        RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        RAILS_ENV: test
        DB_USER: mi_carrera
        DB_PASSWORD: postgres
        PGHOST: localhost
        PGPORT: 5432
      run: |
        bundle exec rake db:create db:schema:load
        bundle exec rspec --exclude-pattern "spec/system/*.rb"

    - name: Upload coverage
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: simplecov-resultset-unit
        path: coverage/.resultset.json
        include-hidden-files: true

  system_test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: mi_carrera
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true

    - name: Run tests
      env:
        RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        RAILS_ENV: test
        DB_USER: mi_carrera
        DB_PASSWORD: postgres
        PGHOST: localhost
        PGPORT: 5432
      run: |
        bundle exec rake db:create db:schema:load
        bundle exec rake spec:system

    - name: Upload coverage
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: simplecov-resultset-system
        path: coverage/.resultset.json
        include-hidden-files: true

    - name: Upload screenshots
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: system_test_screenshots
        path: ./tmp/capybara
        retention-days: 2

  coverage:
    needs: [test, system_test]
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Download unit tests coverage results
        uses: actions/download-artifact@v4
        with:
          name: simplecov-resultset-unit
          path: simplecov-resultset-unit

      - name: Download system tests coverage results
        uses: actions/download-artifact@v4
        with:
          name: simplecov-resultset-system
          path: simplecov-resultset-system

      - name: Merge coverage
        env:
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
          RAILS_ENV: test
        run: |
          bundle exec rake coverage:report

      - uses: joshmfrankel/simplecov-check-action@main
        if: github.actor != 'dependabot[bot]'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          minimum_suite_coverage: 40
